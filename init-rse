#!/usr/bin/env python3

from rucio.client import Client
import itertools

client = Client()

# add new sites to this dict, please use the same name (key) as configured in siterm
sites = {
    "T2_US_SDSC": {
        "hostname": "xrootd-sense-ucsd-redirector-111.sdsc.optiputer.net",
        "scheme": "davs",
        "port": 1094,
        "prefix": "//temp"
    },
    "T2_US_Caltech": {
        "hostname": "redir-01.t2-sense.ultralight.org",
        "scheme": "davs",
        "port": 1094,
        "prefix": "//store/group/tests-sense"
    },
    "T1_US_FNAL": {
        "hostname": "cmssense5-origin-2842-1.fnal.gov",
        "scheme": "davs",
        "port": 2880,
        "prefix": "//dcache/store/temp"
    },
    "T2_US_Nebraska": {
        "hostname": "red-sense-dtn3-macvlan0.unl.edu",
        "scheme": "davs",
        "port": 1095,
        "prefix": "//"
    },
    "T2_US_MGHPCC": {
        "hostname": "xrootd-0-redir.rnd.net2.mghpcc.org",
        "scheme": "davs",
        "port": 1094,
        "prefix": "//"
    }
}

### No change needed below this line ###
for site in sites.values():
    site.update({"impl": "rucio.rse.protocols.gfal.Default",
                "domains": {
                    "lan": {
                        "read": 1,
                        "write": 1,
                        "delete": 1
                    },
                    "wan": {
                        "read": 1,
                        "write": 1,
                        "delete": 1,
                        "third_party_copy_read": 1,
                        "third_party_copy_write": 1
                    }
                }})

for site, site_info in sites.items():
    try:
        print(f"Adding {site}")
        client.add_rse(site)
        client.add_protocol(site, site_info)
        client.set_local_account_limit("root", site, "-1")
        client.add_rse_attribute(site, "fts", "https://cmsftssrv3.fnal.gov:8446")
        client.add_rse_attribute(site, "lfn2pfn_algorithm", "cmstfc")
        client.add_rse_attribute(site, "verify_checksum", "false")
    except Exception as e:
        print(e)
        continue

iterator = itertools.combinations(sites.keys(), 2)
for src, dst in iterator:
    try:
        client.add_distance(src, dst, {"ranking": 1, "distance": 1})
        client.add_distance(dst, src, {"ranking": 1, "distance": 1})
    except:
        continue

client.add_scope("root", "cms")

print(f"RSEs: {[i['rse'] for i in client.list_rses()]}")
